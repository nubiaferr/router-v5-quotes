{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NubiaFerreira\\\\Desktop\\\\extras react\\\\router-project\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Shakespeare',\n  text: 'Paçocaaaaaaaaaa'\n}, {\n  id: 'q2',\n  author: 'Shakespeare',\n  text: 'Queijoooooooo'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AllQuotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_QUOTES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/NubiaFerreira/Desktop/extras react/router-project/src/pages/AllQuotes.js"],"names":["React","useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,aAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADmB,EAMnB;AACEF,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,MAAM,EAAE,aAFV;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANmB,CAArB;;AAaA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDX,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,MAAM,EAAET;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAOD,CA9BD;;GAAMI,S;UACqDN,O;;;KADrDM,S;AAgCN,eAAeA,SAAf","sourcesContent":["import {React, useEffect} from 'react'\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api'\r\n\r\nconst DUMMY_QUOTES = [\r\n  {\r\n    id: 'q1',\r\n    author: 'Shakespeare',\r\n    text: 'Paçocaaaaaaaaaa'\r\n  },\r\n  {\r\n    id: 'q2',\r\n    author: 'Shakespeare',\r\n    text: 'Queijoooooooo'\r\n  }\r\n]\r\n\r\nconst AllQuotes = () => {\r\n  const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true)\r\n\r\n  useEffect(() => {\r\n    sendRequest()\r\n  }, [sendRequest])\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <p className='centered'>\r\n        {error} \r\n      </p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <h1>AllQuotes</h1>\r\n    <QuoteList quotes={DUMMY_QUOTES}/>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default AllQuotes"]},"metadata":{},"sourceType":"module"}