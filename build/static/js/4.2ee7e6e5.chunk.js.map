{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","length","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","params","getSingleQuote","loadedQuote","React","path","exact","to","url"],"mappings":"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","file":"static/js/4.2ee7e6e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2x4rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1UYe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1ef3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__IsQvE\",\"loading\":\"NewCommentForm_loading__WvEv7\",\"control\":\"NewCommentForm_control__1BfeB\",\"actions\":\"NewCommentForm_actions__pD1-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__29MGH\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment)\n  const {onAddedComment} = props\n\n  useEffect(() => {\n    if (status === 'completed' && !error){\n      onAddedComment()\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    \n    const enteredText = commentTextRef.current.value\n\n    if (enteredText.length === 0) return\n\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />  \n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CommentsList from '../comments/CommentsList'\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n  const {quoteId} = params\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllComments)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  let comments\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />  \n      </div>\n    )\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = (\n      <CommentsList comments={loadedComments}/>\n    )\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = (\n      <p className='centered'>\n        No comments yet. \n      </p>\n    )\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React from 'react'\r\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom'\r\nimport Comments from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/api'\r\n\r\nconst DUMMY_QUOTES = [\r\n  {\r\n    id: 'q1',\r\n    author: 'Shakespeare',\r\n    text: 'PaÃ§ocaaaaaaaaaa'\r\n  },\r\n  {\r\n    id: 'q2',\r\n    author: 'Shakespeare',\r\n    text: 'Queijoooooooo'\r\n  }\r\n]\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch()\r\n    const params = useParams()\r\n\r\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true)\r\n\r\n    React.useEffect(() => {\r\n      sendRequest(params.quoteId)\r\n    }, [sendRequest, params])\r\n\r\n    if (status === 'pending') {\r\n      return (\r\n        <div className='centered'>\r\n          <LoadingSpinner />  \r\n        </div>\r\n      )\r\n    }\r\n  \r\n    if (error) {\r\n      return (\r\n        <p className='centered focused'>\r\n          {error} \r\n        </p>\r\n      )\r\n    }\r\n\r\n    if (!loadedQuote.text) return <p>No quote</p>\r\n\r\n  return (\r\n    <div>\r\n        <h1>QuoteDetail</h1>\r\n       <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\r\n       <Route path={`${match.path}`} exact>\r\n          <div className='centered'>\r\n              <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                Load Comments\r\n              </Link>\r\n          </div>\r\n       </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n            <Comments />\r\n        </Route>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"],"sourceRoot":""}