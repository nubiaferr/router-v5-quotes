{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntered","setIsEntered","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EApDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,qCACA,cAAC,IAAD,CAAQC,KAAMF,EAAWG,QAAS,SAACC,GAAD,MAAc,0EAChD,cAAC,EAAD,UACE,uBAAMC,QAZiB,WACzBJ,GAAa,IAWwBV,UAAWC,IAAQc,KAAMC,SAvBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAxBc,WAC5B1B,GAAa,IAuBiCV,UAAU,MAAlD,kC,gBCtBKqC,UAvBE,WACf,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAMZ,OACI,qCACE,0CACA,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WAPxB,SAACuB,GACrBN,EAAYM","file":"static/js/6.bc3371a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2GH9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__33CxI\",\"loading\":\"QuoteForm_loading__lgzye\",\"control\":\"QuoteForm_control__en_hG\",\"actions\":\"QuoteForm_actions__iWvy1\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntered, setIsEntered] = useState(false)\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntered(true)\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false)\n  }\n\n  return (\n    <>\n    <Prompt when={isEntered} message={(location) => 'Are you sure you want to leave? All entered information will be lost'}/>\n    <Card>\n      <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import {React, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst NewQuote = () => {\r\n  const {sendRequest, status} = useHttp(addQuote)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      history.push('/quotes')\r\n    }\r\n  }, [status, history])\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData)\r\n    }\r\n\r\n  return (\r\n      <>\r\n        <h1>NewQuote</h1>\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default NewQuote"],"sourceRoot":""}